{
    "pipes": [],
    "interfaces": [
        {
            "name": "Tab",
            "id": "interface-Tab-69c20d83b1365a9f085ec066d60ddb97a63d2f329c6373d6b7fb8521bf4c5c203f738c571c7ebb8bc8f5e580e2e4b56cdb0ab3d92a84529cf15b92d1c7c666f6",
            "file": "src/app/components/tab.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnInit } from \"@angular/core\"\r\nimport {TabItens} from \"./tabItens.component\"\r\n\r\nexport interface Tab{\r\n    tabsData: {tabName:string; tabText:string}[]\r\n    currentTab: number\r\n}\r\n\r\n@Component({\r\n    selector: \"app-tab\",\r\n    template:`\r\n    <app-tabitens\r\n    [tabsData] = tabsData\r\n    [currentTab] = currentTab\r\n    (onSelection)=\"select($event)\"\r\n    ></app-tabitens>\r\n    `\r\n})\r\n\r\nexport class TabComponent{\r\n    @Input() tabsData!: {tabName:string; tabText:string}[]\r\n    @Input() currentTab!: number\r\n    tabsNames = this.tabsData.map((tab) => tab.tabName)\r\n    tabsTexts = this.tabsData.map((tab) => tab.tabText)\r\n    \r\n    select(tabIndex: number){\r\n        this.currentTab = tabIndex\r\n    }\r\n    \r\n}",
            "properties": [
                {
                    "name": "currentTab",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "tabsData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TabItens",
            "id": "interface-TabItens-12477a681ffbe3930f3638fd9c5d6f2572c9f34cc6ab430c10f7fad52147eab650c736b9a5a6c9c4946190a7d7b3d8710f4e9235ca4816f5e69fa9a0f093758f",
            "file": "src/app/components/tabItens.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from \"@angular/core\"\r\nimport {OnInit} from '@angular/core';\r\n\r\nexport interface TabItens{\r\n  tabsData: {tabName:string; tabText:string}[]\r\n  currentTab: number\r\n}\r\n\r\n@Component({\r\n    selector: 'app-tabitens',\r\n    template:`\r\n    <div>\r\n        <button *ngFor=\"let tabName of tabNames; let i = index\"\r\n            [ngClass]=\"{selected: i === currentTab}\"\r\n            (click)=\"onSelection.emit(i)\">\r\n            {{tabName}}\r\n        </button>\r\n    </div >\r\n    <div class=\"text\">\r\n        <h2> {{tabTexts[currentTab]}} </h2>\r\n    </div>\r\n    `,\r\n    styles: [`\r\n    .tab h2 {\r\n  font-weight: normal;\r\n  font-size: 20pt;\r\n  margin-top: 0;\r\n}\r\n\r\nbutton {\r\n  \r\n  margin-left:10px;\r\n  background-color: #ccc;\r\n  border: 1px solid rgb(118, 118, 118);\r\n  border-radius: 5px;\r\n  padding: 2px 5px;\r\n  font-size: 15pt;\r\n  align-items: center;\r\n}\r\n\r\n.selected {\r\n  font-weight: bold;\r\n  background-color: #aaa;\r\n}\r\n\r\n\r\n.text{\r\n  background-color: #ccc;\r\n  font-weight: normal;\r\n  font-size: 12pt;\r\n  text-align: left;\r\n  margin-top: 15px;\r\n  margin-left: 15px;\r\n  width:200pt;\r\n  height: 100pt;\r\n  border-radius: 10px;\r\n  color:black\r\n}\r\n  `]\r\n})\r\nexport class TabItensComponent{\r\n    @Input() tabsData!: {tabName:string; tabText:string}[]\r\n    tabNames!: string[]\r\n    tabTexts!: string[]\r\n    @Input() currentTab!: number\r\n    @Output() onSelection = new EventEmitter<number>()    \r\n   \r\n  \r\n  constructor(){\r\n    this.tabNames = this.tabsData?.map((tab) => tab.tabName)\r\n    this.tabTexts = this.tabsData?.map((tab) => tab.tabText)\r\n    }\r\n  ngOnInit(): void {\r\n    this.tabNames = this.tabsData?.map((tab) => tab.tabName)\r\n    this.tabTexts = this.tabsData?.map((tab) => tab.tabText)\r\n  }\r\n  \r\n}",
            "properties": [
                {
                    "name": "currentTab",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "tabsData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-4da59fbb25967aebc90280f8f982315c98a044c8c2561c6a4df26ef81c5486447c7b1c5943414c6bc8bf9eb99f6ec0423639f7ec4b24e7505487953ab9d76478",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "template": "<app-tab></app-tab>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'tab-angular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `<app-tab></app-tab>`\n})\nexport class AppComponent {\n  title = 'tab-angular';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "TabComponent",
            "id": "component-TabComponent-69c20d83b1365a9f085ec066d60ddb97a63d2f329c6373d6b7fb8521bf4c5c203f738c571c7ebb8bc8f5e580e2e4b56cdb0ab3d92a84529cf15b92d1c7c666f6",
            "file": "src/app/components/tab.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tab",
            "styleUrls": [],
            "styles": [],
            "template": "<app-tabitens\n[tabsData] = tabsData\n[currentTab] = currentTab\n(onSelection)=\"select($event)\"\n></app-tabitens>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "currentTab",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "tabsData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "literal type[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "tabsNames",
                    "defaultValue": "this.tabsData.map((tab) => tab.tabName)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "tabsTexts",
                    "defaultValue": "this.tabsData.map((tab) => tab.tabText)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "select",
                    "args": [
                        {
                            "name": "tabIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tabIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from \"@angular/core\"\r\nimport {TabItens} from \"./tabItens.component\"\r\n\r\nexport interface Tab{\r\n    tabsData: {tabName:string; tabText:string}[]\r\n    currentTab: number\r\n}\r\n\r\n@Component({\r\n    selector: \"app-tab\",\r\n    template:`\r\n    <app-tabitens\r\n    [tabsData] = tabsData\r\n    [currentTab] = currentTab\r\n    (onSelection)=\"select($event)\"\r\n    ></app-tabitens>\r\n    `\r\n})\r\n\r\nexport class TabComponent{\r\n    @Input() tabsData!: {tabName:string; tabText:string}[]\r\n    @Input() currentTab!: number\r\n    tabsNames = this.tabsData.map((tab) => tab.tabName)\r\n    tabsTexts = this.tabsData.map((tab) => tab.tabText)\r\n    \r\n    select(tabIndex: number){\r\n        this.currentTab = tabIndex\r\n    }\r\n    \r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "TabItensComponent",
            "id": "component-TabItensComponent-12477a681ffbe3930f3638fd9c5d6f2572c9f34cc6ab430c10f7fad52147eab650c736b9a5a6c9c4946190a7d7b3d8710f4e9235ca4816f5e69fa9a0f093758f",
            "file": "src/app/components/tabItens.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tabitens",
            "styleUrls": [],
            "styles": [
                "\n    .tab h2 {\n  font-weight: normal;\n  font-size: 20pt;\n  margin-top: 0;\n}\n\nbutton {\n  \n  margin-left:10px;\n  background-color: #ccc;\n  border: 1px solid rgb(118, 118, 118);\n  border-radius: 5px;\n  padding: 2px 5px;\n  font-size: 15pt;\n  align-items: center;\n}\n\n.selected {\n  font-weight: bold;\n  background-color: #aaa;\n}\n\n\n.text{\n  background-color: #ccc;\n  font-weight: normal;\n  font-size: 12pt;\n  text-align: left;\n  margin-top: 15px;\n  margin-left: 15px;\n  width:200pt;\n  height: 100pt;\n  border-radius: 10px;\n  color:black\n}\n  "
            ],
            "template": "<div>\n    <button *ngFor=\"let tabName of tabNames; let i = index\"\n        [ngClass]=\"{selected: i === currentTab}\"\n        (click)=\"onSelection.emit(i)\">\n        {{tabName}}\n    </button>\n</div >\n<div class=\"text\">\n    <h2> {{tabTexts[currentTab]}} </h2>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "currentTab",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "tabsData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "literal type[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onSelection",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "tabNames",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "tabTexts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 64
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from \"@angular/core\"\r\nimport {OnInit} from '@angular/core';\r\n\r\nexport interface TabItens{\r\n  tabsData: {tabName:string; tabText:string}[]\r\n  currentTab: number\r\n}\r\n\r\n@Component({\r\n    selector: 'app-tabitens',\r\n    template:`\r\n    <div>\r\n        <button *ngFor=\"let tabName of tabNames; let i = index\"\r\n            [ngClass]=\"{selected: i === currentTab}\"\r\n            (click)=\"onSelection.emit(i)\">\r\n            {{tabName}}\r\n        </button>\r\n    </div >\r\n    <div class=\"text\">\r\n        <h2> {{tabTexts[currentTab]}} </h2>\r\n    </div>\r\n    `,\r\n    styles: [`\r\n    .tab h2 {\r\n  font-weight: normal;\r\n  font-size: 20pt;\r\n  margin-top: 0;\r\n}\r\n\r\nbutton {\r\n  \r\n  margin-left:10px;\r\n  background-color: #ccc;\r\n  border: 1px solid rgb(118, 118, 118);\r\n  border-radius: 5px;\r\n  padding: 2px 5px;\r\n  font-size: 15pt;\r\n  align-items: center;\r\n}\r\n\r\n.selected {\r\n  font-weight: bold;\r\n  background-color: #aaa;\r\n}\r\n\r\n\r\n.text{\r\n  background-color: #ccc;\r\n  font-weight: normal;\r\n  font-size: 12pt;\r\n  text-align: left;\r\n  margin-top: 15px;\r\n  margin-left: 15px;\r\n  width:200pt;\r\n  height: 100pt;\r\n  border-radius: 10px;\r\n  color:black\r\n}\r\n  `]\r\n})\r\nexport class TabItensComponent{\r\n    @Input() tabsData!: {tabName:string; tabText:string}[]\r\n    tabNames!: string[]\r\n    tabTexts!: string[]\r\n    @Input() currentTab!: number\r\n    @Output() onSelection = new EventEmitter<number>()    \r\n   \r\n  \r\n  constructor(){\r\n    this.tabNames = this.tabsData?.map((tab) => tab.tabName)\r\n    this.tabTexts = this.tabsData?.map((tab) => tab.tabText)\r\n    }\r\n  ngOnInit(): void {\r\n    this.tabNames = this.tabsData?.map((tab) => tab.tabName)\r\n    this.tabTexts = this.tabsData?.map((tab) => tab.tabText)\r\n  }\r\n  \r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    .tab h2 {\n  font-weight: normal;\n  font-size: 20pt;\n  margin-top: 0;\n}\n\nbutton {\n  \n  margin-left:10px;\n  background-color: #ccc;\n  border: 1px solid rgb(118, 118, 118);\n  border-radius: 5px;\n  padding: 2px 5px;\n  font-size: 15pt;\n  align-items: center;\n}\n\n.selected {\n  font-weight: bold;\n  background-color: #aaa;\n}\n\n\n.text{\n  background-color: #ccc;\n  font-weight: normal;\n  font-size: 12pt;\n  text-align: left;\n  margin-top: 15px;\n  margin-left: 15px;\n  width:200pt;\n  height: 100pt;\n  border-radius: 10px;\n  color:black\n}\n  \n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 66
            }
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-530fa9435cfc29c9c94539652eb4ef2d068618f590c2363f9e497b87de0be000abcf7f116b7568dce377a15b201e5a80d439fdd38b6f8d14eaa489e859662966",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\n\nimport { AppComponent } from './app.component';\nimport { TabItensComponent } from './components/tabItens.component';\nimport { TabComponent } from './components/tab.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    TabComponent,\n    TabItensComponent\n  ],\n  imports: [\n    BrowserModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "TabComponent"
                        },
                        {
                            "name": "TabItensComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Tab1",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/tab.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Tab2",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/tab.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TabItens1",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/tabItens.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TabItens2",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/tabItens.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/tab.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TabComponent>",
                "defaultValue": "(args: TabComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/tabItens.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TabItensComponent>",
                "defaultValue": "(args: TabItensComponent) => ({\n  props: args,\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/stories/tab.stories.ts": [
                {
                    "name": "Tab1",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/tab.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Tab2",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/tab.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/tab.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TabComponent>",
                    "defaultValue": "(args: TabComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/tabItens.stories.ts": [
                {
                    "name": "TabItens1",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/tabItens.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "TabItens2",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/tabItens.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/tabItens.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TabItensComponent>",
                    "defaultValue": "(args: TabItensComponent) => ({\n  props: args,\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/tab.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/tab.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Tab",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/tabItens.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabItensComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/components/tabItens.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TabItens",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/tab.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Tab1",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/tab.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Tab2",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/tab.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/tabItens.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TabItens1",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/tabItens.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TabItens2",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/tabItens.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}